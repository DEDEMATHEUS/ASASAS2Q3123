<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<title>Mario Bros</title>
	<script src="https://cdn.jsdelivr.net/npm/phaser/dist/phaser.min.js"></script>
	<style>
		body {
			margin: 0;
			padding: 0;
		}
		canvas {
			display: block;
		}
	</style>
</head>
<body>
	<script>
		var config = {
			type: Phaser.AUTO,
			width: 800,
			height: 600,
			physics: {
				default: 'arcade',
				arcade: {
					gravity: { y: 300 },
					debug: false
				}
			},
			scene: {
				preload: preload,
				create: create,
				update: update
			}
		};

		var game = new Phaser.Game(config);

		function preload ()
		{
			this.load.image('sky', 'https://cdn.jsdelivr.net/gh/photonstorm/phaser3-examples@main/public/assets/games/starstruck/sky.png');
			this.load.image('ground', 'https://cdn.jsdelivr.net/gh/photonstorm/phaser3-examples@main/public/assets/games/starstruck/platform.png');
			this.load.spritesheet('dude', 'https://cdn.jsdelivr.net/gh/photonstorm/phaser3-examples@main/public/assets/games/starstruck/dude.png', { frameWidth: 32, frameHeight: 48 });
		}

		function create ()
		{
			this.add.image(400, 300, 'sky');

			var platforms = this.physics.add.staticGroup();

			platforms.create(400, 568, 'ground').setScale(2).refreshBody();

			platforms.create(600, 400, 'ground');
			platforms.create(50, 250, 'ground');
			platforms.create(750, 220, 'ground');

			this.player = this.physics.add.sprite(100, 450, 'dude');
			this.player.setBounce(0.2);
			this.player.setCollideWorldBounds(true);

			this.anims.create({
				key: 'left',
				frames: this.anims.generateFrameNumbers('dude', { start: 0, end: 3 }),
				frameRate: 10,
				repeat: -1
			});

			this.anims.create({
				key: 'turn',
				frames: [ { key: 'dude', frame: 4 } ],
				frameRate: 20
			});

			this.anims.create({
				key: 'right',
				frames: this.anims.generateFrameNumbers('dude', { start: 5, end: 8 }),
				frameRate: 10,
				repeat: -1
			});

			this.cursors = this.input.keyboard.createCursorKeys();

			this.physics.add.collider(this.player, platforms);
		}

		function update ()
		{
			if (this.cursors.left.isDown)
			

